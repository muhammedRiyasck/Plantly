<%-include('../layouts/admin/header') %>

<div class="container-scroller">

    <%-include('../layouts/admin/sidebar') %>

    <div class="container-fluid page-body-wrapper">

        <%-include('../layouts/admin/navbar') %>

            <!-- partial -->

          <div class="main-panel">
            <div class="content-wrapper" id="reloadDiv">

            <div class="d-flex">

              <!-- Add Brand Modal -->

              <img width="50" height="50" src="https://img.icons8.com/color/48/potted-plant--v1.png" alt="potted-plant--v1"/>            
             <div class=" d-flex  w-50 ">



                <!--modal for add brand-->

                <div class="modal fade" id="Addbrand" tabindex="-1" aria-labelledby="AddbrandLabel" aria-hidden="true">
                  <div class="modal-dialog modal-lg">
                      <div class="modal-content">
                        

                      </div>
                  </div>
              </div>
                
              </div>

              <!-- End Brand Modal -->

              <div class="w-50 p-2 d-flex justify-content-end ">

              <button type="button" class="btn btn-outline-success  btn-icon-text" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-whatever="@mdo">

                <i class="mdi mdi-upload btn-icon-prepend"></i>

                Add Category
              
              </button>

                <!--modal for add-->
                <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">

                  <div class="modal-dialog">

                    <div class="modal-content">

                      <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel">Add New Category</h5>
                          <button type="button" class="btn-close btn-outline-danger" data-bs-dismiss="modal" aria-label="Close">x</button>
                      </div>

                      <form action="/admin/addCategory" method="post">

                      <div class="modal-body">

                          <div class="mb-3">
                            <label for="recipient-name" class="col-form-label">Category Name</label>
                            <p id="error" class="text-danger text-center "></p>
                            <input type="text" class="form-control text-white" name="name" id="cateName" oninput="categoryCheck(this) ; categoryValidation(this)">
                            <div class="text-center"><p class="text-danger" id="err"></p></div>
                          </div>
                         
                        <div>

                          <div class="form-check">
                            <input class="form-check-input" value="true" type="radio" name="radio" id="flexRadioDefault1">
                            <label class="form-check-label" for="flexRadioDefault1">Listed</label>
                          </div>

                          <div class="form-check">
                            <input  class="form-check-input" value="false" type="radio" name="radio" id="flexRadioDefault2" checked>
                            <label class="form-check-label" for="flexRadioDefault2">Unlisted</label>
                          </div>

                        </div>  
                                                
                      </div>
                      
                      <div class="modal-footer">
                        <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-outline-success" data-bs-dismiss="modal" id="submit">Save</button>
                      </div>
                      
                    </form>

                    </div>
                  </div>
                </div>

                </div>

            </div>
            
            <table class="table table-dark mt-4 " style="border-radius: 10px;">

              <thead class="text-center ">

               <tr class="text-center">

                   <th class="text-white">No</th>
                   <th class="text-white">Category</th>
                   <th class="text-white">Status</th>
                   <th class="text-white">Action</th>
                   <th class="text-white">Delete</th>

                </tr>

               </thead>

                  <tbody class="text-center">

                    <% cate.forEach((val , indx) => { %>

                     <tr>

                      <td><%= indx + 1 %></td>

                      <td><%= val.name %></td>

                      <td><% if(val.is_Listed == true ) { %>

                        <span class="text-success " id="s<%=val._id %>">Listed</span>

                      <% } else { %>

                        <span class="text-danger  "id="s<%=val._id  %>">Unlisted</span>

                        <% } %>

                     </td>

                     <td>
                      <button type="button" id="s<%=val._id %>" class="action btn <%=val.is_Listed==false?'btn-outline-success ':'btn-outline-danger '  %> btn-icon-text" onclick="liststatus('<%= val._id  %>',this)" style="margin-right: 5px;"><%=val.is_Listed ? 'Unlist':'List'  %></button>
                     </td>
                     <td>
                      <button type="button" id="delete" class="btn btn-outline-danger" onclick="cateDelete('<%=val._id%>')">DELETE</button>
                     </td>
                     </tr>
                      
                  <%  }); %>
                     
                    </tbody>

              </table>

                <br>
                <br>
                        
          </div>

        </div>

    </div>  <!-- page-body-wrapper ends -->

</div>  <!-- container-scroller -->

<!---->

<script>

function cateDelete(user){

  fetch(`/admin/cateDelete`,{ 

    method:'post',

    headers:{
      'Content-Type': 'application/json' 
    },

    body:JSON.stringify({user})

  }
  )
}

// Add Category  :-
  
// function addCategory() {

//   const categoryy = document.getElementById('cateName');
//   const radio = document.querySelector('input[name="radio"]:checked');

//   fetch(`/admin/addCategory?name=${categoryy.value}&&radio=${radio.value}`,{method:'post'})

//   .then(response => {

//       if (response.ok) {
        
//         categorySweet();
//         $('#reloadDiv').load('/admin/category #reloadDiv')

//       }

//     })

//     .catch(error => {

//       console.error('Error:', error);

//     });

// };

// Checking The Unique Category :-

// function categoryCheck(input) {

//   const error  = document.getElementById('err')
//   const button = document.querySelector('#submit')

//   fetch(`/admin/addCategory?inp=${input.value}`,{method:'post'}).then(res => res.json()).then(data=>{
 
//     if(data.status){

//       button.disabled = true;
//       error.textContent = 'Already Exist'
    
//     }else{

//       button.disabled = false;
//       error.textContent=''

//     }

//   });

// };

// Add Category Validation :-

  function categoryValidation(input) {
  
    var value = input.value.trim(); 
    var errorElement = document.getElementById('err');
    
    var letters = /^[A-Za-z ]+$/;

    if (!value.match(letters)) {

        errorElement.textContent = 'only characters';
        input.value = ''; 
        return false;

      }
      
    if (value.length < 4) {

      errorElement.textContent = 'Minimum 4 characters required.';
      return false;
    }
    
    errorElement.textContent = ''; 

    return true;
    
  };

  // Sweet Alert :-

  function categorySweet(){

    Swal.fire({

      title: 'Category added',
      text: 'Category Added Successfully ',
      icon: 'success',
      confirmButtonText: 'OK'

    })

  };

  // Category Action :-

  function liststatus(id,e) {
    
      const status = document.getElementById(`s${id}`);

      fetch(`/admin/categoryAction`, {

        method: 'put',
        headers: {

          'Content-Type': 'application/json'

        },

        body:JSON.stringify({id})

      })

      .then(response => {

        if (!response.ok) {

          console.log(error);

        }
            
      })

    .then(data => {

    if (e.textContent == 'List') {

      e.textContent='Unlist'    
      e.classList.remove('btn-outline-success');
      e.classList.add('btn-outline-danger');
      status.textContent='Listed'
      status.classList=('text-success')
            
    } else {

      e.textContent='List'    
      e.classList.add('btn-outline-success');
      e.classList.remove('btn-outline-danger');
      status.textContent='Unlisted'
      status.classList=('text-danger')

    }
        
  })
      
};

//  Edit Category :-

 function editCategory(id , cateId) {

  const cateid = id;
  const newName = document.getElementById('cate'+ id).value;

  fetch(`/admin/categoryEdit?id=${id}&&value=${newName}`, {

    method: 'PUT',
    headers: { 'Content-Type': 'application/json' }

  })
    .then(response => {

      if (!response.ok) {

        throw new Error('Network response was not ok');

      }

      return response.json();

    })

    .then(data => {

      if (data.error) {

        Swal.fire({

          icon: 'error',
          title: 'Error',
          text: data.error,
          confirmButtonText: 'Okay'

        });

      } else {

        Swal.fire({

          icon: 'success',
          title: 'Category Edited',
          text: 'Category edited successfully',
          confirmButtonText: 'Okay'

        }).then(result => {

          if (result.isConfirmed) {

            window.location.reload();

          }

        });

      }

    })

    .catch(error => {

      console.error('Problem in editing category', error);
     
    });

}

//  Edit Validation :-

function editValidation(input,cateId){

    var value = input.value.trim(); 
    var errorElement = document.getElementById('editerr_'+cateId);
    const button =document.getElementById('submitedit_'+cateId)

    var letters = /^[A-Za-z ]+$/;

    if (!value.match(letters)) {
        errorElement.textContent = 'only characters';
        
        button.disabled = true;
        return false;
      }
    if(value==''){
      errorElement.textContent = 'Fill the field';
        
        button.disabled = true;
        return false;
    }
      
    if (value.length < 4) {
      
        errorElement.textContent = 'Minimum 4 characters required.';
        button.disabled = true;
        return false;
    }
    

    errorElement.textContent = ''; 
    button.disabled = false;

};


</script>

<style>

  .swal2-popup {

    /* font-size: 16px;  */
    background-color: #ffffff;

  }
  .swal2-content, .swal2-title {

    color: #29b926 !important;

  }

</style>

<%-include('../layouts/admin/footer') %>
